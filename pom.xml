<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ociweb.jpgRaster</groupId>
	<artifactId>JPGRaster</artifactId>
	<version>0.1.0-SNAPSHOT</version>

	<name>${project.artifactId}</name>
	<description>JPG-Raster (or JPG-to-Raster or J2R) is a JPG file decoder and encoder.
		It reads a JPG file and decompresses all of its data which is then accessible as an array of raw RGB pixel values.
		It can also read an uncompressed BMP file, compress the data and output a corresponding JPG file.</description>
	<url>https://github.com/oci-pronghorn/JPG-Raster</url>
	<licenses>
		<license>
			<name>BSD-3 License</name>
			<url>https://opensource.org/licenses/BSD-3-Clause</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Nathan Tippy</name>
			<email>info@objectcomputing.com</email>
			<organization>ObjectComputing</organization>
			<organizationUrl>http://www.ObjectComputing.com</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/oci-pronghorn/JPG-Raster.git</connection>
		<url>https://github.com/oci-pronghorn/JPG-Raster</url>
		<developerConnection>scm:git:ssh://git@github.com/oci-pronghorn/JPG-Raster.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<properties>
		<java.bootstrap.classes>
			${java.home}/lib/rt.jar
		</java.bootstrap.classes>
		<java.cryptographic.extension.classes>
			${java.home}/lib/jce.jar
		</java.cryptographic.extension.classes>
		<java.secure.socket.extension.classes>
			${java.home}/lib/jsse.jar
		</java.secure.socket.extension.classes>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<profiles>
		<profile>
			<id>cloudbees</id>
			<distributionManagement>
				<repository>
					<id>cloudbees.release</id>
					<url>dav:https://repository-pronghorn.forge.cloudbees.com/release</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
		<profile>
			<id>mvn-central</id>
			<distributionManagement>
				<snapshotRepository>
					<id>PronghornPipes</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots
					</url> <!-- Maven central repos for snapshot and release -->
				</snapshotRepository>
				<repository>
					<id>PronghornPipes</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<version>2.5.3</version>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.8</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>false</autoReleaseAfterClose>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId> <!-- creates empty javadocs for maven central compliance -->
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<id>empty-javadoc-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<classifier>javadoc</classifier>
									<classesDirectory>${basedir}/javadoc</classesDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>

		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
			<id>repository-pronghorn.forge.cloudbees.com-snapshot</id>
			<name>Snapshot Repo for Pronghorn</name>
			<url>https://repository-pronghorn.forge.cloudbees.com/snapshot</url>
			<layout>default</layout>
		</repository>

		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>repository-pronghorn.forge.cloudbees.com-release</id>
			<name>Release Repo for Pronghorn</name>
			<url>https://repository-pronghorn.forge.cloudbees.com/release</url>
			<layout>default</layout>
		</repository>

	</repositories>


	<dependencies>
        <dependency>
            <groupId>com.ociweb</groupId>
            <artifactId>Pronghorn</artifactId>
            <version>[1.0.0-SNAPSHOT,1.1.0)</version>
        </dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<type>jar</type>
			<scope>test</scope>
			<optional>false</optional>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>2.2</version>
			</extension>
		</extensions>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<compilerArguments>
						<profile>compact1</profile>
					</compilerArguments>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<forceCreation>true</forceCreation>
					<archive>
						<manifestEntries>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*jnr-ffi:jnr-ffi*</artifact>
									<excludes>
										<exclude>**/jni/**</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.ociweb.jpgRaster.JPGRaster</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>

					<finalName>uberJPGRaster</finalName>
					<appendAssemblyId>false</appendAssemblyId>

				</configuration>

				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>prepare-package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>

					</execution>
				</executions>
			</plugin>
			<plugin>

				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.13</version>
				<executions>
					<execution>
						<id>proguard</id>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<obfuscate>false</obfuscate>
					<libs>
						<lib>${java.bootstrap.classes}</lib>
						<lib>${java.cryptographic.extension.classes}</lib>
						<lib>${java.secure.socket.extension.classes}</lib>
					</libs>
					<injar>uberJPGRaster.jar</injar>
					<outjar>JPGRaster.jar</outjar>

					<outputDirectory>${project.build.directory}</outputDirectory>
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>5.1</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>


</project>
